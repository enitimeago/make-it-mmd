name: Unity CI

on:
  push:
    branches:
      - format-ci

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - uses: anatawa12/sh-actions/resolve-vpm-packages@master
      with:
        repos: |
          https://vpm.nadena.dev/vpm.json
          https://hai-vr.github.io/vpm-listing/index.json

    - uses: actions/cache@v2
      with:
        path: Library
        key: Library-${{ runner.os }}-unity-2019.4.31f1
        restore-keys: Library-

    - uses: game-ci/unity-test-runner@v4
      env:
        UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
        UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
      with:
        githubToken: ${{ secrets.GITHUB_TOKEN }}
        unityVersion: 2019.4.31f1
        projectPath: .
        # TODO: PlayMode (incl. All) causes GameCI to hang. figure out if it's needed?
        testMode: EditMode
        customParameters: '-executeMethod Packages.Rider.Editor.RiderScriptEditor.SyncSolution'
        coverageOptions: 'generateAdditionalMetrics;generateHtmlReport;generateBadgeReport;assemblyFilters:+enitimeago.non-destructive-mmd.*'

    - uses: actions/upload-artifact@v3
      if: always()
      with:
        name: Test results
        path: artifacts

    # Use the same job to rely on GameCI setting up the solution
    - name: dotnet format
      id: dotnet-format
      continue-on-error: true
      run: ls && dotnet format --verify-no-changes --verbosity diagnostic enitimeago.non-destructive-mmd.editor.csproj

    - name: Report dotnet format Conclusion
      if: always()
      uses: LouisBrunner/checks-action@v2.0.0
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        name: dotnet format
        conclusion: ${{ steps.dotnet-format.outcome }}
