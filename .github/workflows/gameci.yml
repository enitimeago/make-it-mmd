name: Unity CI

on:
  push:
    branches:
      - format-ci

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - uses: anatawa12/sh-actions/resolve-vpm-packages@master
      with:
        repos: |
          https://vpm.nadena.dev/vpm.json
          https://hai-vr.github.io/vpm-listing/index.json

    - uses: actions/cache@v2
      with:
        path: Library
        key: Library-${{ runner.os }}-unity-2019.4.31f1
        restore-keys: Library-

    - uses: game-ci/unity-test-runner@v4
      env:
        UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
        UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
      with:
        githubToken: ${{ secrets.GITHUB_TOKEN }}
        unityVersion: 2019.4.31f1
        projectPath: .
        # TODO: PlayMode (incl. All) causes GameCI to hang. figure out if it's needed?
        testMode: EditMode
        coverageOptions: 'generateAdditionalMetrics;generateHtmlReport;generateBadgeReport;assemblyFilters:+enitimeago.non-destructive-mmd.*'

    - uses: actions/upload-artifact@v3
      if: always()
      with:
        name: Test results
        path: artifacts

  format:
    runs-on: ubuntu-latest
    container: unityci/editor:ubuntu-2019.4.31f1-linux-il2cpp-3

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - uses: anatawa12/sh-actions/resolve-vpm-packages@master
      with:
        repos: |
          https://vpm.nadena.dev/vpm.json
          https://hai-vr.github.io/vpm-listing/index.json

    # - uses: actions/cache@v2
    #   with:
    #     path: Library
    #     key: Library-${{ runner.os }}-unity-2019.4.31f1
    #     restore-keys: Library-

    # https://github.com/JohnMurwin/NQueensSimulation/blob/5a6ac1c7ce256078787584b06fc421610b432028/.github/workflows/CI.yml#L28
    - name: Activate Unity
      # exit code is 1 for manual activation
      continue-on-error: true
      env:
        UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
      run: |          
        echo "$UNITY_LICENSE" | tr -d '\r' > UnityLicenseFile.ulf
        unity-editor -nographics -logFile /dev/stdout -manualLicenseFile UnityLicenseFile.ulf -quit

    - name: Ensure .sln
      run: unity-editor -nographics -logFile /dev/stdout -projectPath . -executeMethod Packages.Rider.Editor.RiderScriptEditor.SyncSolution -quit
    - name: ls
      run: ls Library/PackageCache/com.unity.ide.rider@1.2.1/Rider/Editor/ProjectGeneration

    - name: Set up .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: "5.0.x"

    - name: dotnet format
      run: dotnet format --verify-no-changes --verbosity diagnostic enitimeago.non-destructive-mmd.editor.csproj
